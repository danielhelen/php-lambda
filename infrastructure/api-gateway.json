{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "API Gateway",
  "Parameters": {
    "APIName": {
      "Description": "A name/description for the API",
      "Type": "String",
      "Default": "PHP Lambda"
    },
    "StageName": {
      "Description": "The name of the deployment stage for the API",
      "Type": "String",
      "Default": "production"
    },
    "LogRetention": {
      "Description": "Number of days to keep access logs",
      "Type": "Number",
      "AllowedValues": [
        "1",
        "3",
        "5",
        "7",
        "14",
        "30",
        "60",
        "90",
        "120",
        "150",
        "180",
        "365",
        "400",
        "545",
        "731",
        "1827",
        "3653"
      ],
      "Default": 30
    },
    "LambdaStackName": {
      "Description": "Name of the stack that creates the Lambda function",
      "Type": "String"
    }
  },
  "Resources": {
    "RestAPI": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": {
          "Ref": "APIName"
        },
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        },
        "Name": {
          "Ref": "APIName"
        }
      }
    },
    "LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "DependsOn": [
        "RestAPI"
      ],
      "Properties": {
        "LogGroupName": {
          "Fn::Sub": "API-Gateway-Access-Logs_${RestAPI}/api"
        },
        "RetentionInDays": {
          "Ref": "LogRetention"
        }
      }
    },
    "CloudWatchRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "apigateway.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
        ]
      }
    },
    "Account": {
      "Type": "AWS::ApiGateway::Account",
      "DependsOn": [
        "CloudWatchRole",
        "RestAPI"
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "CloudWatchRole",
            "Arn"
          ]
        }
      }
    },
    "Deployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": [
        "Account",
        "RootMethod",
        "LogGroup"
      ],
      "Properties": {
        "Description": "Deployment",
        "RestApiId": {
          "Ref": "RestAPI"
        },
        "StageDescription": {
          "AccessLogSetting": {
            "DestinationArn": {
              "Fn::GetAtt": [
                "LogGroup",
                "Arn"
              ]
            },
            "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] $context.httpMethod $context.resourcePath $context.protocol $context.status $context.responseLength $context.requestId"
          },
          "Description": "Stage"
        },
        "StageName": {
          "Ref": "StageName"
        }
      }
    },
    "Permission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::ImportValue": {
            "Fn::Sub": "${LambdaStackName}-LambdaName"
          }
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPI}/*/*"
        }
      }
    },
    "RootMethod": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "RestAPI",
        "Permission"
      ],
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/arn:aws:lambda:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":function:",
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": "${LambdaStackName}-LambdaName"
                  }
                },
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "RestAPI",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "RestAPI"
        }
      }
    },
    "ProxyResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RestAPI",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "RestAPI"
        }
      }
    },
    "ProxyMethod": {
      "Type": "AWS::ApiGateway::Method",
      "DependsOn": [
        "RestAPI",
        "Permission",
        "ProxyResource"
      ],
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/arn:aws:lambda:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":function:",
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": "${LambdaStackName}-LambdaName"
                  }
                },
                "/invocations"
              ]
            ]
          }
        },
        "ResourceId": {
          "Ref": "ProxyResource"
        },
        "RestApiId": {
          "Ref": "RestAPI"
        }
      }
    }
  },
  "Outputs": {
    "APIId": {
      "Description": "API Gateway API ID",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-APIID"
        }
      },
      "Value": {
        "Ref": "RestAPI"
      }
    },
    "RootResourceId": {
      "Description": "API Gateway Root Resource ID",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-RootResourceId"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "RestAPI",
          "RootResourceId"
        ]
      }
    },
    "InvokeURL": {
      "Description": "The base URL to invoke the API Gateway stage",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-InvokeURL"
        }
      },
      "Value": {
        "Fn::Sub": "https://${RestAPI}.execute-api.${AWS::Region}.amazonaws.com/${StageName}"
      }
    }
  }
}
